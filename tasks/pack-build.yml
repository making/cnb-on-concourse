---
platform: linux
inputs:
- name: workspace
caches:
- path: cache
outputs:
- name: image
params:
  IMAGE: 
  # Use Docker credential helpers for Google's GCR, Amazon's ECR, or Microsoft's ACR.
  USE_CRED_HELPERS: false
  DOCKER_REGISTRY: index.docker.io
  DOCKER_USERNAME: ""
  DOCKER_PASSWORD: ""
  CNB_REGISTRY_AUTH: ""
run:
  user: root
  path: bash
  args: 
  - -c
  - |
    set -eo pipefail

    rm -rf /workspace
    rm -rf /cache

    ln -fs $(pwd)/workspace /workspace
    ln -fs $(pwd)/cache /cache

    if [ "${CNB_REGISTRY_AUTH}" = "" ];then
      export CNB_REGISTRY_AUTH="{\"${DOCKER_REGISTRY}\":\"Basic $(echo -n ${DOCKER_USERNAME}:${DOCKER_PASSWORD} | base64)\"}"
    fi
    echo -e '\033[38;5;196m===> DETECTING\033[0;00m'
    /lifecycle/detector \
      -app=$(pwd)/workspace \
      -group=/layers/group.toml \
      -plan=/layers/plan.toml

    echo -e '\033[38;5;184m===> RESTORING\033[0;00m'
    /lifecycle/restorer \
      -group=/layers/group.toml \
      -layers=/layers \
      -path=/cache

    echo -e '\033[38;5;36m===> ANALYZING\033[0;00m'
    /lifecycle/analyzer \
      -layers=/layers \
      -helpers=${USE_CRED_HELPERS} \
      -group=/layers/group.toml \
      ${IMAGE}

    echo -e '\033[38;5;39m===> BUILDING\033[0;00m'
    /lifecycle/builder \
      -app=$(pwd)/workspace \
      -layers=/layers \
      -group=/layers/group.toml \
      -plan=/layers/plan.toml

    echo -e '\033[38;5;56m===> EXPORTING\033[0;00m'
    /lifecycle/exporter \
      -app=$(pwd)/workspace \
      -layers=/layers \
      -helpers=${USE_CRED_HELPERS} \
      -group=/layers/group.toml \
      ${IMAGE} | tee export.log

    DIGEST=$(grep ' Digest:' export.log | grep 'Digest' | sed 's/.*Digest: sha256://')

    echo -e '\033[38;5;163===> CACHING\033[0;00m'
    echo "===> CACHING"
    rm -rf /cache/*
    /lifecycle/cacher \
      -layers=/layers \
      -group=/layers/group.toml \
      -path=/cache

    echo "${DIGEST}" >> ./image/digest
    echo "sha256:${DIGEST}" >> ./image/image-id